---
title: "Variables Aleatorias: Distribuciones continuas"
format: html
editor: visual
---

```{r}
#| label: load-packages
#| code-fold: true
#| warning: false
#| message: false


library(tidyverse)
library(plotly)
```


# Distribución uniforme continua


$X\sim unif(a,b)$


## Función de densidad

```{r}
#| code-fold: true

a <- 1
b <- 5

tabla_continua <- tibble(x=seq(from=a, to=b, length.out=10),
                         f_x=dunif(x, min=a, max=b))

ggplot(tabla_continua)+
  geom_line(aes(x, f_x), color="darkorchid3")+
  theme_bw()


```

## Función de distribución 

```{r}
#| code-fold: true

tabla_continua <- tabla_continua |> mutate(f_d=punif(x, min=a, max=b))

ggplot(tabla_continua)+
  geom_line(aes(x, f_d), color="#ADF122")+
  theme_bw()


```


## Muestra

```{r}
#| code-fold: true
N <- 5000
n_bin <- 20

muestra_continua <- tibble(ID=paste("Muestra", 1:N, sep="_"),
                           x= runif(N, min=a, max=b))

ggplot(muestra_continua)+
  geom_histogram(aes(x), color="black", fill="red", boundary=1, binwidth = (b-a)/n_bin)+
  theme_bw()

ggplot(muestra_continua)+
  geom_density(aes(x, after_stat(count)), color="black", fill="red")+
  theme_bw()

ggplot(muestra_continua)+
  geom_density(aes(x), color="black", fill="red")+
  theme_bw()


```


## Media y varianza


```{r}
#| code-fold: true
mean(muestra_continua$x)
var(muestra_continua$x)

```








# Distribución exponencial


$X\sim exp(\lambda)$


## Función de densidad

```{r}
#| code-fold: true
lambda <- 0.5

tabla_exp <- tibble(x=seq(from=0, to=6, length.out=100),
                         f_x= dexp(x, rate=lambda),f_d= pexp(x, lambda), rate=lambda)

lambda_vector <- c(1, 2.5, 3, 5)
for (lambda_j in lambda_vector) {
  tabla_preliminar <- tibble(x=seq(from=0, to=6, length.out=100),
                         f_x= dexp(x, rate=lambda_j), f_d= pexp(x, lambda_j), rate=lambda_j)
  tabla_exp <- bind_rows(tabla_exp, tabla_preliminar)
}

tabla_exp$rate <- factor(tabla_exp$rate)

graf_exp <- ggplot(tabla_exp)+
  geom_line(aes(x, f_x, color=rate))+
  theme_bw()

ggplotly(graf_exp)
```

## Función de distribución 

```{r}
#| code-fold: true

ggplot(tabla_exp)+
  geom_line(aes(x, f_d, color=rate))+
  theme_bw()


```


## Muestra

```{r}
#| code-fold: true
N <- 5000
lambda <- 0.5

muestra_exp <- tibble(x= rexp(N, lambda), rate=lambda)

lambda_vector <- c(1, 1.25, 1.5)
for (lambda_j in lambda_vector) {
  tabla_preliminar <- tibble(x= rexp(N, lambda_j), rate=lambda_j)
  muestra_exp <- bind_rows(muestra_exp, tabla_preliminar)
}

muestra_exp$rate <- factor(muestra_exp$rate)


ggplot(muestra_exp)+
  geom_histogram(aes(x, fill=rate), color="black", boundary=0)+
  theme_bw()

ggplot(muestra_exp)+
  geom_density(aes(x, fill=rate), alpha=0.1, color="black")+
  theme_bw()


```


## Media y varianza


```{r}
#| code-fold: true
resumen_exp <- muestra_exp |> group_by(rate) |> summarise(media=mean(x), varianza=var(x))

resumen_exp

```



# Distribución gamma


$X\sim gamma(\alpha, \lambda)$


## Función de densidad

```{r}
#| code-fold: true
lambda <- 2
alfa <- 1

tabla_gamma <- tibble(x=seq(from=0, to=5, length.out=200),
                         f_x= dgamma(x, shape=alfa, rate=lambda),f_d= pgamma(x, shape=alfa, rate=lambda), alfa=alfa)

alfa_vector <- c(1.2, 1.8, 2)
for (alfa_j in alfa_vector) {
tabla_pre <- tibble(x=seq(from=0, to=5, length.out=200),
                         f_x= dgamma(x, shape=alfa_j, rate=lambda),f_d= pgamma(x, shape=alfa_j, rate=lambda), alfa=alfa_j)
  tabla_gamma <- bind_rows(tabla_gamma, tabla_pre)
}

tabla_gamma$alfa <- factor(tabla_gamma$alfa)

graf_gamma <- ggplot(tabla_gamma)+
  geom_line(aes(x, f_x, color=alfa))+
  theme_bw()

ggplotly(graf_gamma)
```

## Función de distribución 

```{r}
#| code-fold: true

ggplot(tabla_gamma)+
  geom_line(aes(x, f_d, color=alfa))+
  theme_bw()


```


# Distribución Normal


$X\sim N(\mu, \sigma^2)$


## Función de densidad

```{r}
#| code-fold: true
mu <- 10
sigma <- 0.5

tabla_norm <- tibble(x=seq(from=0, to=20, length.out=200),
                         f_x= dnorm(x, mean=mu, sd=sigma),f_d= pnorm(x, mu, sigma), desv_std=sigma)

sigma_vector <- c(1, 2.5, 3, 5)
for (sigma_j in sigma_vector) {
  tabla_preliminar <- tibble(x=seq(from=0, to=20, length.out=200),
                         f_x= dnorm(x, mean=mu, sd=sigma_j),f_d= pnorm(x, mu, sigma_j), desv_std=sigma_j)
  tabla_norm <- bind_rows(tabla_norm, tabla_preliminar)
}

tabla_norm$desv_std <- factor(tabla_norm$desv_std)

graf_normal <- ggplot(tabla_norm)+
  geom_line(aes(x, f_x, color=desv_std))+
  theme_bw()

ggplotly(graf_normal)
```

## Función de distribución 

```{r}
#| code-fold: true

ggplot(tabla_norm)+
  geom_line(aes(x, f_d, color=desv_std))+
  theme_bw()


```


## Regla 0.68, 0.95 y 0.997

```{r}
#| code-fold: true


ggplot()+
  geom_function(fun=dnorm, color="firebrick", xlim=c(-3.1, 3.1))+
  stat_function(fun=dnorm, color="firebrick", xlim=c(-3, 3), geom="area", fill="#AAE345", alpha=0.5)+
  stat_function(fun=dnorm, color="firebrick", xlim=c(-2, 2), geom="area", fill="#BCA555", alpha=0.5)+
  stat_function(fun=dnorm, color="firebrick", xlim=c(-1, 1), geom="area", fill="goldenrod1", alpha=0.5)+
  theme_bw()

```







## Muestra

```{r}
#| code-fold: true
N <- 10000
mu <- 0

muestra_norm <- tibble(x= rnorm(N, mean=mu, sd=1)  , desv_std=1)

sigma_vector <- c(1.25, 1.5, 5)
for (sigma_j in sigma_vector) {
  tabla_preliminar <- tibble(x= rnorm(N, mean=mu, sd= sigma_j)  , desv_std=sigma_j)
  muestra_norm <- bind_rows(muestra_norm, tabla_preliminar)
}

muestra_norm$desv_std <- factor(muestra_norm$desv_std)


ggplot(muestra_norm)+
  geom_histogram(aes(x, fill=desv_std), color="black", boundary=0)+
  theme_bw()

ggplot(muestra_norm)+
  geom_density(aes(x, fill=desv_std), alpha=0.1, color="black")+
  theme_bw()


```


## Media y varianza


```{r}
#| code-fold: true
resumen_norm <- muestra_norm |> group_by(desv_std) |> summarise(media=mean(x), varianza=var(x), desv_stda=sd(x))

resumen_norm

```


## Problema 6 Tarea 4

Suppose the scores of students on a Statistics course are Normally distributed with a mean of 541 and a standard deviation of 44. What percentage of the students scored between 453 and 541 on the exam? 

```{r}
#| code-fold: true

ggplot()+
  geom_function(fun=dnorm, color="firebrick", args = list(mean = 541, sd = 44), xlim=c(360,  668))+
  stat_function(fun=dnorm, color="firebrick", args = list(mean = 541, sd = 44), xlim=c(453,  541), geom="area", fill="olivedrab3")



pnorm(541, 541, 44)-pnorm(453, 541, 44)
```

## Problema 7 Tarea 5

A random variable $X$ is normally distributed, with a mean of 39 and a standard deviation of 4.4.
Which of the following is the appropriate interquartile range for this distribution?



```{r}
#| code-fold: true

ggplot()+
  geom_function(fun=dnorm, color="firebrick", args = list(mean = 39, sd = 4.4), xlim=c(24,  54))+
  stat_function(fun=dnorm, color="firebrick", args = list(mean = 39, sd = 4.4), xlim=c(qnorm(0.25, 39, 4.4),  qnorm(0.75, 39,4.4)), geom="area", fill="olivedrab3")



qnorm(0.75, 39, 4.4)

qnorm(0.25, 39, 4.4)
```


## Problema 9 Tarea 5

Let $X$ be normally distributed with mean, $\mu$, and standard deviation, $\sigma=\mu$ Also suppose $Pr(−9<X<17)=0.9383$. Find the value of the mean, $\mu$.



```{r}
#| code-fold: true

a <- -10
b <- 14

tabla_p10 <- tibble(media=seq(from=a, to = b+10, by=0.1), 
                    p_int= pnorm(b/media-1)-pnorm(a/media-1))

ggplot()+
  geom_function(fun=dnorm, color="firebrick", args = list(mean = 22.7, sd = 22.7), xlim=c(-45.4,  90.8))+
  stat_function(fun=dnorm, color="firebrick", args = list(mean = 22.7, sd = 22.7), xlim=c(-10,  14), geom="area", fill="olivedrab3")

```


## Otros problemas de la Tarea 5

```{r}
#| code-fold: true

pnorm(31.2, 30.6, 0.6)-pnorm(29.4, 30.6, 0.6)


qnorm(0.2580)
pexp(1, 2, lower.tail = FALSE)

pnorm(8.6, 7.5, 35/60, lower.tail=FALSE)
```





# Distribución t de Student


$X\sim t(df)$


## Función de densidad

```{r}
#| code-fold: true
gl <- 3


tabla_ts <- tibble(x=seq(from=-4, to=4, length.out=200),
                         f_x= dt(x, gl),f_d= pt(x, gl), g_l=gl)

gl_vector <- c(5, 10, 50, 100)
for (gl_j in gl_vector) {
  tabla_preliminar <- tibble(x=seq(from=-4, to=4, length.out=200),
                         f_x= dt(x, gl_j),f_d= pt(x, gl_j), g_l=gl_j)
  tabla_ts <- bind_rows(tabla_ts, tabla_preliminar)
}

tabla_ts$g_l <- factor(tabla_ts$g_l)


tabla_preliminar <- tibble(x=seq(from=-4, to=4, length.out=200),
                         f_x= dnorm(x),f_d= pnorm(x), g_l="N(0,1)")
tabla_preliminar$g_l <- factor(tabla_preliminar$g_l)

tabla_ts <- bind_rows(tabla_ts, tabla_preliminar)


tabla_ts$g_l <- factor(tabla_ts$g_l)

graf_ts <- ggplot(tabla_ts)+
  geom_line(aes(x, f_x, color=g_l))+
  theme_bw()

ggplotly(graf_ts)
```

## Función de distribución 

```{r}
#| code-fold: true

ggplot(tabla_ts)+
  geom_line(aes(x, f_d, color=g_l))+
  theme_bw()


```

## Muestra

```{r}
#| code-fold: true
N <- 1000
gl <- 3

muestra_ts <- tibble(x= rt(N, gl)  , g_l=gl)

gl_vector <- c(5, 20, 100)
for (gl_j in gl_vector) {
  tabla_preliminar <- tibble(x= rt(N, gl_j)  , g_l=gl_j)
  muestra_ts <- bind_rows(muestra_ts, tabla_preliminar)
}

muestra_ts$g_l <- factor(muestra_ts$g_l)


ggplot(muestra_ts)+
  geom_histogram(aes(x, fill=g_l), color="black", boundary=0)+
  theme_bw()

ggplot(muestra_ts)+
  geom_density(aes(x, fill=g_l), alpha=0.5, color="black")+
  theme_bw()


```


## Media y varianza


```{r}
#| code-fold: true
resumen_ts <- muestra_ts |> group_by(g_l) |> summarise(media=mean(x), varianza=var(x), desv_stda=sd(x))

resumen_ts

```






## Problema 10 Tarea 5

Let $X$ be normally distributed with mean, $\mu$, and standard deviation, $\sigma=\mu$ Also suppose $Pr(−9<X<17)=0.9383$. Find the value of the mean, $\mu$.



```{r}
#| code-fold: true

a <- -10
b <- 14

tabla_p10 <- tibble(media=seq(from=a, to = b+10, by=0.1), 
                    p_int= pnorm(b/media-1)-pnorm(a/media-1))

ggplot()+
  geom_function(fun=dnorm, color="firebrick", args = list(mean = 22.7, sd = 22.7), xlim=c(-45.4,  90.8))+
  stat_function(fun=dnorm, color="firebrick", args = list(mean = 22.7, sd = 22.7), xlim=c(-10,  14), geom="area", fill="olivedrab3")

```



